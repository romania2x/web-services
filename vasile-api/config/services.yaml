# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
  env(MONGODB_URL): ''
  env(MONGODB_DB): ''
  env(CACHE_DSN): ''

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true      # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: '../src/*'
    exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

  # controllers are imported separately to make sure services can be injected
  # as action arguments even if you don't extend any base controller class
  App\Controller\:
    autowire: false
    resource: '../src/Controller'
    tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
  jms_serializer.serialized_name_annotation_strategy:
    class: JMS\Serializer\Naming\SerializedNameAnnotationStrategy
    arguments:
      - '@jms_serializer.identical_property_naming_strategy'

  Jsor\Doctrine\PostGIS\Event\ORMSchemaEventSubscriber:
    tags:
      - { name: doctrine.event_subscriber, connection: default }

  Elasticsearch\Client:
    factory: '@App\Elasticsearch\ClientFactory'

  cache:
    class: '\Redis'
    public: true
    factory: ['Symfony\Component\Cache\Adapter\RedisAdapter','createConnection']
    arguments: ['redis://internal-cache']

  App\Elasticsearch\Indexer:
    arguments:
      $serializer: "@jms_serializer.serializer"
      $elasticSearchClient: '@Elasticsearch\Client'

  App\MessageHandler\Crawler\DataGovRo\DataSetDetailsUpdateHandler:
    calls:
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]
    arguments:
      $sourceRepository: '@App\Repository\OpenData\SourceRepository'
  App\MessageHandler\Crawler\DataGovRo\DataSetDownloadHandler:
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]
  App\MessageHandler\Crawler\DataGovRo\DataSetProcessorHandler:
    calls:
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]
    arguments:
      $sourceRepository: '@App\Repository\OpenData\SourceRepository'
  App\MessageHandler\Crawler\DataGovRo\Siruta\ProcessSirutaHandler:
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]

  App\MessageHandler\Crawler\DataGovRo\PostalCodes\ProcessPostalCodesHandler:
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]

  App\MessageHandler\Crawler\DataGovRo\Streets\ProcessStreetsHandler:
    arguments:
      $cache: '@cache'
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]
      - ['setSerializer',['@jms_serializer.serializer']]

  App\MessageHandler\Crawler\DataGovRo\Streets\UpdateAdministrativeUnitsHandler:
    arguments:
      $cache: '@cache'
      $unitRepository: '@App\Repository\Administrative\UnitRepository'
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]
      - ['setSerializer',['@jms_serializer.serializer']]

  App\MessageHandler\Crawler\DataGovRo\Streets\LoadStreetsHandler:
    arguments:
      $cache: '@cache'
      $wayRepository: '@App\Repository\Administrative\WayRepository'
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]
      - ['setSerializer',['@jms_serializer.serializer']]

  App\MessageHandler\Crawler\DataGovRo\Streets\LoadStreetsNumbersHandler:
    arguments:
      $cache: '@cache'
      $wayNumberRepository: '@App\Repository\Administrative\WayNumberRepository'
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]
      - ['setSerializer',['@jms_serializer.serializer']]

  App\MessageHandler\Crawler\DataGovRo\Siruta\LoadZonesHandler:
    arguments:
      $zoneRepository: '@App\Repository\Administrative\ZoneRepository'
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]

  App\MessageHandler\Crawler\DataGovRo\Siruta\LoadCountiesHandler:
    arguments:
      $countyRepository: '@App\Repository\Administrative\CountyRepository'
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]

  App\MessageHandler\Crawler\DataGovRo\Siruta\LoadAdministrativeUnitsHandler:
    arguments:
      $administrativeUnitRepository: '@App\Repository\Administrative\UnitRepository'
    calls:
      - ['setProjectDir',['%kernel.project_dir%']]
      - ['setMessageBus',['@message_bus']]
      - ['setGraphEntityManager',['@neo4j.entity_manager.default']]

  App\Repository\Administrative\ZoneRepository:
    arguments:
      $serializer: '@jms_serializer.serializer'

  App\Repository\Administrative\CountyRepository:
    arguments:
      $serializer: '@jms_serializer.serializer'

  App\Repository\Administrative\UnitRepository:
    arguments:
      $serializer: '@jms_serializer.serializer'

  App\Repository\Administrative\WayRepository:
    arguments:
      $serializer: '@jms_serializer.serializer'

  App\Repository\Administrative\WayNumberRepository:
    arguments:
      $serializer: '@jms_serializer.serializer'

  App\Repository\OpenData\SourceRepository:
    arguments:
      $serializer: '@jms_serializer.serializer'

  App\Command\OpenData\PruneCommand:
    arguments:
      $cache: '@cache'
